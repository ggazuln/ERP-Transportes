"""Agrega modelo Persona completo y referencia a Cargo

Revision ID: 93a46c551dbe
Revises: 
Create Date: 2025-07-28 18:04:39.037567

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '93a46c551dbe'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('bodega', schema=None) as batch_op:
        batch_op.alter_column('tipo',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=100),
               existing_nullable=True)

    with op.batch_alter_table('cargo', schema=None) as batch_op:
        batch_op.alter_column('nombre',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.drop_constraint(batch_op.f('cargo_nombre_key'), type_='unique')

    with op.batch_alter_table('empresa', schema=None) as batch_op:
        batch_op.alter_column('nombre',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               nullable=False)
        batch_op.alter_column('rut',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('direccion',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('telefono',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('ciudad',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('logo',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('giro',
               existing_type=sa.VARCHAR(length=250),
               type_=sa.String(length=255),
               existing_nullable=True)

    with op.batch_alter_table('modulo', schema=None) as batch_op:
        batch_op.alter_column('nombre',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('icono',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.drop_constraint(batch_op.f('modulo_nombre_key'), type_='unique')
        batch_op.drop_constraint(batch_op.f('fk_modulo_padre'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'modulo', ['modulo_padre_id'], ['id'])
        batch_op.drop_column('descripcion')

    with op.batch_alter_table('permiso', schema=None) as batch_op:
        batch_op.alter_column('codigo',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('descripcion',
               existing_type=sa.TEXT(),
               type_=sa.String(length=150),
               existing_nullable=False)
        batch_op.alter_column('modulo_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('persona', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', sa.String(length=150), nullable=True))
        batch_op.drop_column('rol')
        batch_op.drop_column('password')
        batch_op.drop_column('cargo')

    with op.batch_alter_table('persona_bodega', schema=None) as batch_op:
        batch_op.create_index('ix_persona_bodega_bodega_id', ['bodega_id'], unique=False)
        batch_op.create_index('ix_persona_bodega_persona_id', ['persona_id'], unique=False)

    with op.batch_alter_table('persona_rol', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('persona_rol_persona_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('persona_rol_rol_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'rol', ['rol_id'], ['id'])
        batch_op.create_foreign_key(None, 'persona', ['persona_id'], ['id'])

    with op.batch_alter_table('rol', schema=None) as batch_op:
        batch_op.alter_column('nombre',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.drop_constraint(batch_op.f('rol_nombre_key'), type_='unique')
        batch_op.drop_column('descripcion')

    with op.batch_alter_table('rol_permiso', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('rol_permiso_permiso_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('rol_permiso_rol_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'rol', ['rol_id'], ['id'])
        batch_op.create_foreign_key(None, 'permiso', ['permiso_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('rol_permiso', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('rol_permiso_rol_id_fkey'), 'rol', ['rol_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('rol_permiso_permiso_id_fkey'), 'permiso', ['permiso_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('rol', schema=None) as batch_op:
        batch_op.add_column(sa.Column('descripcion', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.create_unique_constraint(batch_op.f('rol_nombre_key'), ['nombre'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column('nombre',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)

    with op.batch_alter_table('persona_rol', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('persona_rol_rol_id_fkey'), 'rol', ['rol_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('persona_rol_persona_id_fkey'), 'persona', ['persona_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('persona_bodega', schema=None) as batch_op:
        batch_op.drop_index('ix_persona_bodega_persona_id')
        batch_op.drop_index('ix_persona_bodega_bodega_id')

    with op.batch_alter_table('persona', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cargo', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('password', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('rol', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.drop_column('password_hash')

    with op.batch_alter_table('permiso', schema=None) as batch_op:
        batch_op.alter_column('modulo_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('descripcion',
               existing_type=sa.String(length=150),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('codigo',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)

    with op.batch_alter_table('modulo', schema=None) as batch_op:
        batch_op.add_column(sa.Column('descripcion', sa.VARCHAR(length=150), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_modulo_padre'), 'modulo', ['modulo_padre_id'], ['id'], ondelete='SET NULL')
        batch_op.create_unique_constraint(batch_op.f('modulo_nombre_key'), ['nombre'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column('icono',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('nombre',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)

    with op.batch_alter_table('empresa', schema=None) as batch_op:
        batch_op.alter_column('giro',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=250),
               existing_nullable=True)
        batch_op.alter_column('logo',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('ciudad',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('telefono',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.alter_column('direccion',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('rut',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.alter_column('nombre',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               nullable=True)

    with op.batch_alter_table('cargo', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('cargo_nombre_key'), ['nombre'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column('nombre',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)

    with op.batch_alter_table('bodega', schema=None) as batch_op:
        batch_op.alter_column('tipo',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)

    # ### end Alembic commands ###
